#!/bin/bash

# DKIM config
dkimConfig()
{
    postconf -e milter_protocol=2
    postconf -e milter_default_action=accept
    postconf -e smtpd_milters=inet:localhost:12301

    # OPENDKIM_var env -> put "key value" line in /etc/opendkim.conf
    echo -n > /etc/opendkim.conf
    for e in ${!OPENDKIM_*} ; do
      if [ "$e" == "OPENDKIM_DOMAINS" ] ; then
        continue
      fi
      echo "${e:9} ${!e}" >> /etc/opendkim.conf
    done

    rm -f /etc/opendkim/KeyTable
    rm -f /etc/opendkim/SigningTable

    echo "DNS records:"
    for d in $OPENDKIM_DOMAINS ; do
      domain=$(echo "$d"| cut -f1 -d '=')
      selector=$(expr match "$d" '.*\=\(.*\)')
      if [ -z "$selector" ] ; then
        selector="mail"
      fi

      domainDir="/etc/opendkim/keys/$domain"
      privateFile="$domainDir/$selector.private"
      txtFile="$domainDir/$selector.txt"
      if [ ! -f "$privateFile" ] ; then
        echo "No DKIM private key found for selector '$selector' in domain '$domain'. Generating one now..."
        mkdir -p "$domainDir"
        opendkim-genkey -D "$domainDir" --selector=$selector --domain=$domain --append-domain
      fi

      # Ensure strict permissions required by opendkim
      chown opendkim:opendkim "$domainDir" "$privateFile"
      chmod a=,u=rw "$privateFile"

      echo "$selector._domainkey.$domain $domain:$selector:$privateFile" >> /etc/opendkim/KeyTable
      echo "*@$domain $selector._domainkey.$domain" >> /etc/opendkim/SigningTable

      cat "$txtFile"
    done
}

# rsyslog config
rsyslogConfig()
{
    # Rsyslog base
    /bin/echo -e '$ModLoad imuxsock\n$WorkDirectory /var/spool/rsyslog\n\ninclude(file="/etc/rsyslog.d/*.conf")\n\n*.*;auth,authpriv.none /dev/stdout\n' > /etc/rsyslog.conf

    if [ "${RSYSLOG_TIMESTAMP,,}" == 'no' ] ; then
        echo '$template noTimestampFormat,"%syslogtag%%msg%\n"' >> /etc/rsyslog.conf
        echo '$ActionFileDefaultTemplate noTimestampFormat' >> /etc/rsyslog.conf
    fi

    if [ "${RSYSLOG_LOG_TO_FILE,,}" == 'yes' ] ; then
        echo 'mail.* -/var/log/mail.log' >> /etc/rsyslog.conf
    fi

    if [ "${RSYSLOG_REMOTE_TRANSPORT_PROTOCOL,,}" == 'tcp' ] ; then
        RSYSLOG_REMOTE_TRANSPORT_PROTOCOL='tcp'
    else
        RSYSLOG_REMOTE_TRANSPORT_PROTOCOL='udp'
    fi
    if [ ! -z ${RSYSLOG_REMOTE_HOST} ] ; then
        echo "*.* action(type=\"omfwd\" target=\"${RSYSLOG_REMOTE_HOST,,}\" port=\"${RSYSLOG_REMOTE_PORT}\" protocol=\"${RSYSLOG_REMOTE_TRANSPORT_PROTOCOL}\" template=\"${RSYSLOG_REMOTE_TEMPLATE}\")" >> /etc/rsyslog.conf
    fi
}

#
cleanExit()
{
    /bin/echo -e "stopping service Postfix \c"
    service postfix stop
    /bin/echo -e "stopping service OpenDKIM \c"
    service opendkim stop
    # copy sender tokens back to source iff changed
    cmp --quiet /etc/tokens/sender.tokens.json /var/spool/postfix/etc/tokens/sender.tokens.json || \
        cp -vp /var/spool/postfix/etc/tokens/sender.tokens.json /etc/tokens/sender.tokens.json
    pkill -TERM rsyslogd
}

#
cleanPIDs()
{
    rm -f \
        /run/opendkim/opendkim.pid \
        /run/rsyslogd.pid \
        /var/spool/postfix/pid/master.pid
}

#
postfixConfig()
{
    # POSTFIX_var env -> postconf -e var=$POSTFIX_var
    for e in ${!POSTFIX_*} ; do postconf -e "${e:8}=${!e}" ; done
    # POSTFIXMASTER_var env -> postconf -Me var=$POSTFIXMASTER_var + replace __ with /
    for e in ${!POSTFIXMASTER_*} ; do v="${e:14}" && postconf -Me "${v/__/\/}=${!e}"; done
    # POSTMAP_var env value -> /etc/postfix/var
    for e in ${!POSTMAP_*} ; do echo "${!e}" > "/etc/postfix/${e:8}" && postmap "/etc/postfix/${e:8}"; done
    chown -R postfix:postfix /var/lib/postfix /var/mail /var/spool/postfix
}


trap cleanExit  SIGTERM SIGINT


# set defaults
RSYSLOG_TIMESTAMP=${RSYSLOG_TIMESTAMP:-'yes'}
RSYSLOG_LOG_TO_FILE=${RSYSLOG_LOG_TO_FILE:-'no'}
RSYSLOG_REMOTE_PORT=${RSYSLOG_REMOTE_PORT:-'514'}
RSYSLOG_REMOTE_TRANSPORT_PROTOCOL=${RSYSLOG_REMOTE_TRANSPORT_PROTOCOL:-'udp'}
RSYSLOG_REMOTE_TEMPLATE=${RSYSLOG_REMOTE_TEMPLATE:-'RSYSLOG_ForwardFormat'}
RSYSLOG_REMOTE_HOST=${RSYSLOG_REMOTE_HOST:-''}


# Unclean container stop might leave pid files around and rsyslogd seems
# sometimes falsely think it's already running if some other process
# happens to have its old pid when starting.
cleanPIDs


if [ ! -s /etc/rsyslog.conf ]; then
  rsyslogConfig
else
  # Don't fiddle with existing rsyslog config file
  echo "Skipping /etc/rsyslog.conf generation - file already exists"
fi

/bin/echo -e "\n\n"

if [ ! -z "$OPENDKIM_DOMAINS" ] ; then
  dkimConfig
  /bin/echo -e "starting service OpenDKIM-"$(dpkg-query --show --showformat='${Version}' opendkim)" \c"
  service opendkim start
fi

postfixConfig
/bin/echo -e "starting service Postfix-"$(dpkg-query --show --showformat='${Version}' postfix)" \c"
service postfix start

# install proper sender tokens into chroot iff neccessary
cmp --quiet /etc/tokens/sender.tokens.json /var/spool/postfix/etc/tokens/sender.tokens.json || \
  cp -vp /etc/tokens/sender.tokens.json /var/spool/postfix/etc/tokens/sender.tokens.json

/bin/echo -e "launching Rsyslog-"$(dpkg-query --show --showformat='${Version}' rsyslog)"\n"
rsyslogd -n &

wait

cmp --quiet /etc/tokens/sender.tokens.json /var/spool/postfix/etc/tokens/sender.tokens.json || \
  cp -vp /var/spool/postfix/etc/tokens/sender.tokens.json /etc/tokens/sender.tokens.json

exit 0
